/* PrismJS 1.15.0
https://prismjs.com/download.html#themes=prism-tomorrow&languages=markup+css+clike+javascript+bash&plugins=line-numbers */
/**
 * prism.js tomorrow night eighties for JavaScript, CoffeeScript, CSS and HTML
 * Based on https://github.com/chriskempson/tomorrow-theme
 * @author Rose Pritchard
 */

code[class*="language-"],
pre[class*="language-"] {
	color: var(--prism-text);
	font-size: var(--font-size-small);
	background: none;
	font-family: var(--font-family-mono);
	text-align: left;
	white-space: pre;
	word-spacing: normal;
	word-break: normal;
	word-wrap: normal;
	line-height: var(--prism-line-height);

	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;

	-webkit-hyphens: none;
	-moz-hyphens: none;
	-ms-hyphens: none;
	hyphens: none;

}

/* Code blocks */
pre[class*="language-"] {
	padding: 1em;
	/* margin: .5em 0; */
	overflow: auto;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
	background: var(--prism-bg);
}

/* Inline code */
:not(pre) > code[class*="language-"] {
	padding: .1em;
	border-radius: .3em;
	white-space: normal;
}

.token.comment,
.token.block-comment,
.token.prolog,
.token.doctype,
.token.cdata {
	color: var(--prism-comment);
}

.token.punctuation {
	color: var(--prism-punctuation);
}

.token.tag,
.token.attr-name,
.token.namespace,
.token.deleted {
	color: var(--prism-tag);
}

.token.function-name {
	color: var(--prism-function-name);
}

.token.boolean,
.token.number,
.token.function {
	color: var(--prism-number-boolean-func);
}

.token.property,
.token.class-name,
.token.constant,
.token.symbol {
	color: var(--prism-property-class-symbol);
}

.token.selector,
.token.important,
.token.atrule,
.token.keyword,
.token.builtin {
	color: var(--prism-keyword);
}

.token.string,
.token.char,
.token.attr-value,
.token.regex,
.token.variable {
	color: var(--prism-string-variable);
}

.token.operator,
.token.entity,
.token.url {
	color: var(--prism-operator);
}

.token.important,
.token.bold {
	font-weight: bold;
}
.token.italic {
	font-style: italic;
}

.token.entity {
	cursor: help;
}

.token.inserted {
	color: green;
}

pre[class*="language-"].line-numbers {
	position: relative;
	padding-left: 3.8em;
	counter-reset: linenumber;
}

pre[class*="language-"].line-numbers > code {
	position: relative;
	white-space: inherit;
}

.line-numbers .line-numbers-rows {
	position: absolute;
	pointer-events: none;
	top: 4px;
	font-size: 100%;
	left: -3.8em;
	width: 3em; /* works for line-numbers below 1000 lines */
	letter-spacing: -1px;
	border-right: 2px solid var(--prism-line-numbers);

	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;

}

.line-numbers-rows > span {
	pointer-events: none;
	display: block;
	counter-increment: linenumber;
}

.line-numbers-rows > span:before {
	content: counter(linenumber);
	color: var(--prism-line-numbers);
	display: block;
	padding-right: 0.8em;
	text-align: right;
}

.command-line-prompt {
	border-right: 2px solid var(--prism-line-numbers);
	display: block;
	float: left;
	font-size: 100%;
	letter-spacing: -1px;
	margin-right: 1em;
	pointer-events: none;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

.command-line-prompt>span:before {
	content: ' ';
	display: block;
	padding-right: 0.8em;
}

.command-line-prompt>span[data-user]:before {
	content: "$";
}

.command-line-prompt>span[data-user="root"]:before {
	content: "#";
}

.command-line-prompt>span[data-prompt]:before {
	content: attr(data-prompt);
}


/* FIXES */
pre code[class~="language-bash"] {
	padding: 0;
}
